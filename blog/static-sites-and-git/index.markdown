# Статические сайты и Git

## Предисловие

[Предыдущую заметку](/#!/blog/hakyll-getting-started) я закончил
словами о том, что статические сайты можно публиковать на [Git][]-сервисах.

Если Вы знакомы с системами управления версиями, то преимущества данного
подхода Вам должны быть понятны. Если же Вы не знакомы, то вот они:

- на сервере хранятся все версии файлов Вашего сайта;
- можно вести совместную работу над сайтом.

Отдельное преимущество _Git_-сервисов заключается также в том, что Ваш сайт
обновляется автоматически с обновлением соответствующего хранилища файлов сайта
(репозитория).

В этой заметке под _Git_-сервисами я буду подразумевать следующие два:

- [GitHub][];
- [Bitbucket][].

Общие черты этих двух сервисов:

- бесплатность;
- удобный веб-интерфейс;
- наличие утилиты с графическим интерфесом для Windows;
- наличие так называемых _Pages_ для статических сайтов пользователей сервиса:
  * [GitHub Pages][];
  * [Bitbucket Pages][].

Основное отличие _Bitbucket_ от _GitHub_ в том, что он позволяет бесплатно 
создавать приватные (закрытые от посторонних) репозитории.

## Подготовка

Если Вы ещё не зарегистрированны на _Git_-сервисе, то первым делом сделайте 
это. После чего, используя всё тот же веб-интерфейс, создайте в нём 
репозиторий для своего сайта. Имя репозитория должно выглядеть так: 
`LOGIN.github.io` или `LOGIN.bitbucket.org`, соответственно, где _LOGIN_ Ваш 
логин на данном _Git_-сервисе. Обновление файлов в этом репозитории будет 
приводить к автоматическому изменению Вашего сайта. (Ещё одно отличие 
_Bitbucket Pages_ от _GitHub Pages_ в том, что сайт на первом обновляется 
мгновенно, а вот на втором как-правило нужно подождать какое-то время.)

Теперь для добавления в репозиторий файлов сайта Вам потребуется утилита для 
работы с _Git_-репозиториями. Есть несколько вариантов:

- \"фирменные\" утилиты _Git_-сервисов с графическим интерфесом (кроме Windows 
    есть поддержка и других операционных систем);
- универсальная утилита с графическим интерфейсом для Windows [TortoiseGit][];
- стандартная утилита командной строки с сайта [Git][];
- различные дополнения для сред разработки и текстовых редакторов.

Лично мне \"фирменные\" утилиты не понравились. Под Windows наиболее удобным 
вариантом оказалась _TortoiseGit_. Эта утилита интегрируется с _Проводником_, 
распознаёт папки с локальными копиями репозиториев и добавляет для них в 
контестное меню операции _Git_. Наконец, универсальным вариантом является 
стандартная утилита командной строки `git`. Её мы и будет здесь использовать.

## Локальная копия

Теперь, когда у Вас есть _Git_-репозиторий и сайт, который нужно на него 
\"залить\", запустим оболочку (shell) и перейдём в каталог с файлами сайта.

Если Вы раннее не работали с _Git_, то прежде чем выполнять дальнейшие 
действия, Вам нужно немного настроить `git`:

``` bash
git config --global user.name "Ваше имя"
git config --global user.email "Ваш email"
```

Теперь проинициализируем текущий каталог в качестве локальной копии репозитория:

``` bash
git init
git remote add origin https://LOGIN@SERVICE/LOGIN/REPOSITORY.git
```

В последней команде под `SERVICE` понимается адрес _Git_-сервиса, а под 
`REPOSITORY` - название репозитория.

## Добавление и изменение файлов

Далее, добавим файлы сайта в репозиторий:

``` bash
git add .
git commit -m "First commit"
git push -u origin --all
```

Всё, Ваши файлы \"залиты\" в репозиторий, и Вы можете наслаждаться Вашим сайтом 
по ссылке вида `LOGIN.github.io` или `LOGIN.bitbucket.org` в зависимости об 
выбранного сервиса.

В дальнейшем, любые действия по добавлению и изменению файлов сайта должны 
сопровождаться вышеприведёнными командами.

## Удаление файла

Если Вам нужно удалить файл из репозитория, запустите команду:

``` bash
git rm FILE
```

## Перемещение файла

Для перемещения файла в пределах репозитория, переместите файл в 
локальной копии репозитория, а затем запустите пару команд:

``` bash
git add FILE
git rm FILE
```

## Загрузка репозитория

Копирование (клонирование) удалённого репозитория делается командой:

``` bash
git clone https://LOGIN@bitbucket.org/LOGIN/REPOSITORY.git
```

## Загрузка обновлений из репозитория

Если Вы работаете над сайтом на разных компьютерах, или над сайтом работает
команда, то Вам потребуется перед работой с локальной копией репозитория
получать его обновления. Для этого достаточно вызывать в каталоге локальной
копии команду:

``` bash
git pull
```

Пока всё!

## Что ещё почитать

- [Как начать работать с GitHub: быстрый старт](http://habrahabr.ru/post/125799/)
- [Ежедневная работа с Git](http://habrahabr.ru/post/174467/)
- [Командная работа в Git](http://habrahabr.ru/post/75990/)
- [Pull request\'ы на GitHub или Как мне внести изменения в чужой проект](http://habrahabr.ru/post/125999/)

## Ссылки

[Git]: http://git-scm.com/
[TortoiseGit]: http://code.google.com/p/tortoisegit/
[GitHub Pages]: http://pages.github.com/
[GitHub]: https://github.com/
[Bitbucket]: https://bitbucket.org/
[Bitbucket Pages]: http://pages.bitbucket.org/
[Hakyll]: http://jaspervdj.be/hakyll/

- [Git][]
- [TortoiseGit][]
- [GitHub][]
- [GitHub Pages][]
- [Bitbucket][]
- [Bitbucket Pages][]
- [Hakyll][]
